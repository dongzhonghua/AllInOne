<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xzy.dsvshx.blog.mapper.CommentRecordMapper" >
  <resultMap id="BaseResultMap" type="xzy.dsvshx.blog.model.CommentRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="pId" property="pid" jdbcType="BIGINT" />
    <result column="articleId" property="articleid" jdbcType="BIGINT" />
    <result column="answererId" property="answererid" jdbcType="INTEGER" />
    <result column="respondentId" property="respondentid" jdbcType="INTEGER" />
    <result column="commentDate" property="commentdate" jdbcType="VARCHAR" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="isRead" property="isread" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="xzy.dsvshx.blog.model.CommentRecord" extends="BaseResultMap" >
    <result column="commentContent" property="commentcontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pId, articleId, answererId, respondentId, commentDate, likes, isRead
  </sql>
  <sql id="Blob_Column_List" >
    commentContent
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from comment_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="xzy.dsvshx.blog.model.CommentRecord" >
    insert into comment_record (id, pId, articleId, 
      answererId, respondentId, commentDate, 
      likes, isRead, commentContent
      )
    values (#{id,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{articleid,jdbcType=BIGINT}, 
      #{answererid,jdbcType=INTEGER}, #{respondentid,jdbcType=INTEGER}, #{commentdate,jdbcType=VARCHAR}, 
      #{likes,jdbcType=INTEGER}, #{isread,jdbcType=BIT}, #{commentcontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="xzy.dsvshx.blog.model.CommentRecord" >
    insert into comment_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pId,
      </if>
      <if test="articleid != null" >
        articleId,
      </if>
      <if test="answererid != null" >
        answererId,
      </if>
      <if test="respondentid != null" >
        respondentId,
      </if>
      <if test="commentdate != null" >
        commentDate,
      </if>
      <if test="likes != null" >
        likes,
      </if>
      <if test="isread != null" >
        isRead,
      </if>
      <if test="commentcontent != null" >
        commentContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=BIGINT},
      </if>
      <if test="answererid != null" >
        #{answererid,jdbcType=INTEGER},
      </if>
      <if test="respondentid != null" >
        #{respondentid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null" >
        #{commentdate,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="isread != null" >
        #{isread,jdbcType=BIT},
      </if>
      <if test="commentcontent != null" >
        #{commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xzy.dsvshx.blog.model.CommentRecord" >
    update comment_record
    <set >
      <if test="pid != null" >
        pId = #{pid,jdbcType=BIGINT},
      </if>
      <if test="articleid != null" >
        articleId = #{articleid,jdbcType=BIGINT},
      </if>
      <if test="answererid != null" >
        answererId = #{answererid,jdbcType=INTEGER},
      </if>
      <if test="respondentid != null" >
        respondentId = #{respondentid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null" >
        commentDate = #{commentdate,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="isread != null" >
        isRead = #{isread,jdbcType=BIT},
      </if>
      <if test="commentcontent != null" >
        commentContent = #{commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="xzy.dsvshx.blog.model.CommentRecord" >
    update comment_record
    set pId = #{pid,jdbcType=BIGINT},
      articleId = #{articleid,jdbcType=BIGINT},
      answererId = #{answererid,jdbcType=INTEGER},
      respondentId = #{respondentid,jdbcType=INTEGER},
      commentDate = #{commentdate,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      isRead = #{isread,jdbcType=BIT},
      commentContent = #{commentcontent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="xzy.dsvshx.blog.model.CommentRecord" >
    update comment_record
    set pId = #{pid,jdbcType=BIGINT},
      articleId = #{articleid,jdbcType=BIGINT},
      answererId = #{answererid,jdbcType=INTEGER},
      respondentId = #{respondentid,jdbcType=INTEGER},
      commentDate = #{commentdate,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      isRead = #{isread,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>