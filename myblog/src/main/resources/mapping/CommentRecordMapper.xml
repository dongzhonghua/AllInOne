<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.dsvshx.blog.mapper.CommentRecordMapper" >
  <resultMap id="BaseResultMap" type="xyz.dsvshx.blog.entity.CommentRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="pId" property="pid" jdbcType="BIGINT" />
    <result column="articleId" property="articleid" jdbcType="BIGINT" />
    <result column="answererId" property="answererid" jdbcType="INTEGER" />
    <result column="respondentId" property="respondentid" jdbcType="INTEGER" />
    <result column="commentDate" property="commentdate" jdbcType="VARCHAR" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="isRead" property="isread" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="xyz.dsvshx.blog.entity.CommentRecord" extends="BaseResultMap" >
    <result column="commentContent" property="commentcontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pId, articleId, answererId, respondentId, commentDate, likes, isRead
  </sql>
  <sql id="Blob_Column_List" >
    commentContent
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="xyz.dsvshx.blog.entity.CommentRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xyz.dsvshx.blog.entity.CommentRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from comment_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from comment_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.dsvshx.blog.entity.CommentRecordExample" >
    delete from comment_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.dsvshx.blog.entity.CommentRecord" >
    insert into comment_record (id, pId, articleId, 
      answererId, respondentId, commentDate, 
      likes, isRead, commentContent
      )
    values (#{id,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{articleid,jdbcType=BIGINT}, 
      #{answererid,jdbcType=INTEGER}, #{respondentid,jdbcType=INTEGER}, #{commentdate,jdbcType=VARCHAR}, 
      #{likes,jdbcType=INTEGER}, #{isread,jdbcType=BIT}, #{commentcontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="xyz.dsvshx.blog.entity.CommentRecord" >
    insert into comment_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pId,
      </if>
      <if test="articleid != null" >
        articleId,
      </if>
      <if test="answererid != null" >
        answererId,
      </if>
      <if test="respondentid != null" >
        respondentId,
      </if>
      <if test="commentdate != null" >
        commentDate,
      </if>
      <if test="likes != null" >
        likes,
      </if>
      <if test="isread != null" >
        isRead,
      </if>
      <if test="commentcontent != null" >
        commentContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=BIGINT},
      </if>
      <if test="answererid != null" >
        #{answererid,jdbcType=INTEGER},
      </if>
      <if test="respondentid != null" >
        #{respondentid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null" >
        #{commentdate,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="isread != null" >
        #{isread,jdbcType=BIT},
      </if>
      <if test="commentcontent != null" >
        #{commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.dsvshx.blog.entity.CommentRecordExample" resultType="java.lang.Integer" >
    select count(*) from comment_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pid != null" >
        pId = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.articleid != null" >
        articleId = #{record.articleid,jdbcType=BIGINT},
      </if>
      <if test="record.answererid != null" >
        answererId = #{record.answererid,jdbcType=INTEGER},
      </if>
      <if test="record.respondentid != null" >
        respondentId = #{record.respondentid,jdbcType=INTEGER},
      </if>
      <if test="record.commentdate != null" >
        commentDate = #{record.commentdate,jdbcType=VARCHAR},
      </if>
      <if test="record.likes != null" >
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.isread != null" >
        isRead = #{record.isread,jdbcType=BIT},
      </if>
      <if test="record.commentcontent != null" >
        commentContent = #{record.commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update comment_record
    set id = #{record.id,jdbcType=BIGINT},
      pId = #{record.pid,jdbcType=BIGINT},
      articleId = #{record.articleid,jdbcType=BIGINT},
      answererId = #{record.answererid,jdbcType=INTEGER},
      respondentId = #{record.respondentid,jdbcType=INTEGER},
      commentDate = #{record.commentdate,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=INTEGER},
      isRead = #{record.isread,jdbcType=BIT},
      commentContent = #{record.commentcontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment_record
    set id = #{record.id,jdbcType=BIGINT},
      pId = #{record.pid,jdbcType=BIGINT},
      articleId = #{record.articleid,jdbcType=BIGINT},
      answererId = #{record.answererid,jdbcType=INTEGER},
      respondentId = #{record.respondentid,jdbcType=INTEGER},
      commentDate = #{record.commentdate,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=INTEGER},
      isRead = #{record.isread,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.dsvshx.blog.entity.CommentRecord" >
    update comment_record
    <set >
      <if test="pid != null" >
        pId = #{pid,jdbcType=BIGINT},
      </if>
      <if test="articleid != null" >
        articleId = #{articleid,jdbcType=BIGINT},
      </if>
      <if test="answererid != null" >
        answererId = #{answererid,jdbcType=INTEGER},
      </if>
      <if test="respondentid != null" >
        respondentId = #{respondentid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null" >
        commentDate = #{commentdate,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="isread != null" >
        isRead = #{isread,jdbcType=BIT},
      </if>
      <if test="commentcontent != null" >
        commentContent = #{commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="xyz.dsvshx.blog.entity.CommentRecord" >
    update comment_record
    set pId = #{pid,jdbcType=BIGINT},
      articleId = #{articleid,jdbcType=BIGINT},
      answererId = #{answererid,jdbcType=INTEGER},
      respondentId = #{respondentid,jdbcType=INTEGER},
      commentDate = #{commentdate,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      isRead = #{isread,jdbcType=BIT},
      commentContent = #{commentcontent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.dsvshx.blog.entity.CommentRecord" >
    update comment_record
    set pId = #{pid,jdbcType=BIGINT},
      articleId = #{articleid,jdbcType=BIGINT},
      answererId = #{answererid,jdbcType=INTEGER},
      respondentId = #{respondentid,jdbcType=INTEGER},
      commentDate = #{commentdate,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      isRead = #{isread,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>